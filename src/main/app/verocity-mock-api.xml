<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:mulexml="http://www.mulesoft.org/schema/mule/xml" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/xml http://www.mulesoft.org/schema/mule/xml/current/mule-xml.xsd">
    <flow name="verocity-mock-apiFlow">
        <http:listener config-ref="tempworks-bgcheck-httpListenerConfig" path="/verocity/backgroundcheck" doc:name="HTTP"/>
        <object-to-string-transformer doc:name="Object to String"/>
        <logger message="Request Payload received to Verocity API:  #[payload]  Received Request Headers: #[message.inboundProperties.toString()]" level="INFO" doc:name="Logger"/>
        <set-payload value="{  &quot;OrderResponse&quot;: {   &quot;orderId&quot;: 1234,   &quot;reportId&quot;: 5678,   &quot;status&quot;: &quot;Created&quot;  } }" mimeType="application/json" doc:name="Set Payload"/>
    </flow>
</mule>
